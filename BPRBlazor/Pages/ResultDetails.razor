@using BPRBlazor.Components.Results
@using BPRBlazor.Components.Common
@using AutoMapper
@using BPR.Mediator.Interfaces
@using BPRBlazor.Components.Results.Charts
@using BPRBlazor.Components.ModelManagement
@using BPRBlazor.Services;
@using BPR.Model.Enums
@using Violation = BPRBlazor.Components.Results.Violation
@inject IResultService ResultService
@inject IJSRuntime JsRuntime
@inject IMapper Mapper
@inject ExtendedAnalysisResultsHandler ExtendedAnalysisHandler

@page "/results/{id:guid}"

<LoadingIndicator @ref="_loadingIndicator" />
<div class="float-end hide-pdf">
    <button class="btn btn-secondary" @onclick="DownloadPdfAsync">Download as PDF</button>
</div>

@if (_result is null) 
{
    <h2>No results to display...</h2>
}
else 
{
    <div>
        <h1 class="mb-3">Analysis results of @_result.Title</h1>
        @if (_technicalDebtClassification != null)
        {
            <p>Technical debt classification: <strong>@_technicalDebtClassification</strong></p>
        }
    </div>
    
    <div class="hide-pdf mb-3">
        <p>Filter details based on rules</p>
        <SelectRuleTypeComponent OnChange="HandleRuleType" RuleTypes="GetCurrentRuleTypes()"/>
    </div>
    
    @if (ShouldDisplayResults(RuleType.ForbiddenDependency) && _result.ArchitectureModel != null)
    {
        <div class="pdf-image my-5">
            <CreateEditArchitectureComponent ModelViewModel="@_result.ArchitectureModel" IsEditable="false"/>
        </div>
    }

    @if (_result.Violations.Count != _filteredViolations.Count)
    {
        <h5>Showing @_filteredViolations.Count of the @_result.Violations.Count total violation@(_result.Violations.Count != 1 ? "s" : "")</h5>
    }
    else
    {
        <h5>Showing @_result.Violations.Count total violation@(_result.Violations.Count != 1 ? "s" : "")</h5>
    }

    @foreach (var violation in _filteredViolations)
    {
        <div class="violation">
            <Violation Model="violation" />
        </div>
    }

    @if (ShouldDisplayResults(RuleType.ConditionalStatements))
    {
        <h3 class="mt-5 mb-2">Distribution of conditional statements</h3>
        <div class="pdf-image mb-5 justify-content-center d-flex">
            <PieChart Labels="_conditionalFrequencies?.Keys.ToArray()" Data="_conditionalFrequencies?.Values.ToArray()" ShowDataLabels="false"/>
        </div>
    }

    @if (ShouldDisplayResults(RuleType.SolutionMetrics))
    {
        <h3 class="mt-5 mb-2">Distribution of lines of code vs lines of comments</h3>
        <div class="pdf-image mb-5 justify-content-center d-flex">
            <PieChart Labels="_codeLinesMetrics?.Keys.ToArray()" Data="_codeLinesMetrics?.Values.ToArray()" ShowDataLabels="false"/>
        </div>
        <h3 class="mt-5 mb-2">Distribution of different solution entities</h3>
        <div class="pdf-image mb-5">
            <BarChart Labels="_solutionMetrics?.Keys.ToArray()" Data="_solutionMetrics?.Values.ToArray()"/>
        </div>
        <div class="mb-5">
            <h3 class="mt-4 mb-2">Distribution of each file's amount of referenced external types</h3>
            <Table Data="_classCouplings" HeaderOne="Class" HeaderTwo="External types"></Table>
            <h3 class="mt-4 mb-2">Distribution of each file's amount of lines of code</h3>
            <Table Data="_codeLinesPerFile" HeaderOne="Class" HeaderTwo="Lines of code"></Table>
            <h3 class="mt-4 mb-2">Distribution of each file's amount of lines of comments</h3>
            <Table Data="_commentLinesPerFile" HeaderOne="Class" HeaderTwo="Lines of comments"></Table>
        </div>
    }

    @if (ShouldDisplayResults(RuleType.ExternalCalls))
    {
        <ExternalCallsDetails
            EndOfLifeFrameworks="_result.ExtendedAnalysisResults?.EndOfLifeFrameworks"
            ExternalApisCalls="_externalApiCalls"/>
    }

    @if (ShouldDisplayResults(RuleType.CodeSimilarity) && _codeSimilarities != null)
    {
        <h3 class="mt-5 mb-2">Distribution of code similarities within files</h3>
        @foreach (var item in _codeSimilarities)
        {
            <div class="mb-4">
                <Table Data="item.Value" HeaderOne=@($"{item.Key} compared to similar files") HeaderTwo="Similarity (%)" PushLastColumnRight="true"></Table>
            </div>
        }
    }
}